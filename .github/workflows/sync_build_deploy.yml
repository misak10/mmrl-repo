name: sync-build-deploy
on:
  schedule:
    - cron: '0 */4 * * *'

  workflow_dispatch:
   inputs:
      run_sync:
        description: "Run Sync"
        type: choice
        required: true
        default: 'No'
        options:
         - 'Yes'
         - 'No'

permissions:
  contents: write
  issues: write
  pull-requests: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  IS_SYNC: ${{ inputs.run_sync == 'Yes' || github.event_name == 'schedule' }}

jobs:
  sync:
    runs-on: ubuntu-latest
<<<<<<< HEAD
    outputs:
      has_updates: ${{ steps.check_updates.outputs.has_updates }}
=======
>>>>>>> 1193b8b98cb2dd577f8845d5846d2dcf5c83024e
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mmrl-util

<<<<<<< HEAD
      - name: Sync and Check Updates
        id: check_updates
=======
      - name: Sync
>>>>>>> 1193b8b98cb2dd577f8845d5846d2dcf5c83024e
        if: ${{ env.IS_SYNC == 'true' }}
        run: |
          mmrl-util sync --force --diff versions_diff.md
          
<<<<<<< HEAD
          # 检查是否有更新
          if [ -f "log/sync.log" ] && grep -q -E "New version found|Updated module" "log/sync.log"; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
=======
          mmrl-util check --clean
          
          if [ -f "log/sync.log" ]; then
            cat "log/sync.log"
>>>>>>> 1193b8b98cb2dd577f8845d5846d2dcf5c83024e
          fi

      - name: Write versions diff to summary
        if: ${{ env.IS_SYNC == 'true' }}
        run: |
          if [ -f versions_diff.md ]; then
            echo "## Versions Diff" >> $GITHUB_STEP_SUMMARY
            echo "$(cat versions_diff.md)" >> $GITHUB_STEP_SUMMARY
            rm versions_diff.md
          fi
          
      - name: Write latest versions to summary
        if: ${{ env.IS_SYNC != 'true' }}
        run: |
          mmrl-util index --list > latest_versions.md
          echo "## Latest Versions" >> $GITHUB_STEP_SUMMARY
          echo "$(cat latest_versions.md)" >> $GITHUB_STEP_SUMMARY
          rm latest_versions.md

      - name: Index and Push
        if: ${{ env.IS_SYNC == 'true' }}
        run: |
<<<<<<< HEAD
          mmrl-util index --push
=======
          mmrl-util check --clean
          mmrl-util index --force --push
          
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "chore: Update modules data [skip ci]"
            git push
          fi
>>>>>>> 1193b8b98cb2dd577f8845d5846d2dcf5c83024e

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: log/*.log
  
  build:
    runs-on: ubuntu-latest
    needs: sync
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
<<<<<<< HEAD

  notify:
    needs: [sync, deploy]
    if: needs.sync.outputs.has_updates == 'true'
    uses: ./.github/workflows/telegram_updates.yml
    secrets:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
=======
>>>>>>> 1193b8b98cb2dd577f8845d5846d2dcf5c83024e
