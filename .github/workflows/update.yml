name: Update Repository

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '.github/workflows/**'
      - 'README.md'
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mmrl-util gitpython requests
          
      - name: Create required directories
        run: |
          mkdir -p modules
          mkdir -p json
          mkdir -p assets
          
      - name: Initialize config if not exists
        run: |
          if [ ! -f json/config.json ]; then
            echo '{
              "name": "Misaki-Module Repo",
              "website": "https://misak10.github.io/mmrl-repo/",
              "support": "https://github.com/misak10/mmrl-repo/issues",
              "submission": "https://github.com/misak10/mmrl-repo/issues/new",
              "cover": "https://misak10.github.io/mmrl-repo/assets/cover.webp",
              "description": "一个提供各种实用 Magisk 模块的仓库。(自用)",
              "metadata": {
                "version": 1,
                "timestamp": 1704520800.0
              }
            }' > json/config.json
          fi
          
      - name: Check Git Updates
        run: |
          python3 - <<EOF
          import os
          import yaml
          import git
          import json
          from datetime import datetime
          
          def check_git_updates(track_file):
              with open(track_file, 'r') as f:
                  track = yaml.safe_load(f)
              
              if track.get('update_to', '').endswith('.git'):
                  repo_url = track['update_to']
                  module_name = os.path.basename(os.path.dirname(track_file))
                  
                  try:
                      repo = git.Repo.clone_from(repo_url, f'temp_{module_name}')
                      latest_tag = sorted(repo.tags, key=lambda t: t.commit.committed_datetime)[-1]
                      
                      track['last_update'] = latest_tag.commit.committed_datetime.timestamp()
                      track['versions'] = len(repo.tags)
                      
                      with open(track_file, 'w') as f:
                          yaml.dump(track, f)
                          
                  except Exception as e:
                      print(f"Error checking {module_name}: {str(e)}")
                  finally:
                      if os.path.exists(f'temp_{module_name}'):
                          import shutil
                          shutil.rmtree(f'temp_{module_name}')
          
          for module in os.listdir('modules'):
              track_file = f'modules/{module}/track.yaml'
              if os.path.exists(track_file):
                  check_git_updates(track_file)
          EOF
          
      - name: Update repository
        run: |
          mmrl-util sync
          mmrl-util index
          mmrl-util sitemap -b https://misak10.github.io/mmrl-repo/
          
      - name: Commit changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git diff --quiet && git diff --staged --quiet || git commit -m "chore: update repository"
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }} 