name: Update Tracks

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-tracks:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          cache/
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-cache-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-pip-cache-
          
    - name: Create cache directory
      run: mkdir -p cache
      
    - name: Run update script
      id: update
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        python scripts/track_updates.py > update_log.txt
        if grep -q "No modules were updated" update_log.txt; then
          echo "CHANGES_DETECTED=false" >> $GITHUB_ENV
          echo "没有检测到模块变化，跳过提交。"
        else
          echo "CHANGES_DETECTED=true" >> $GITHUB_ENV
          echo "检测到模块变化，将进行提交。"
        fi
        cat update_log.txt
        
    - name: Commit changes
      if: env.CHANGES_DETECTED == 'true'
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        current_time=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
        git add modules/*/track.json
        git diff --staged --name-only | grep -q . && git commit -m "chore(tracks): Update module information

        🤖 Auto-generated by GitHub Actions
        🕒 Time: $current_time
        
        - Update module tracks and metadata
        - Sync with latest repository states
        - Update antifeatures information" || echo "No changes to commit"
        
    - name: Push changes
      if: env.CHANGES_DETECTED == 'true'
      run: git push
